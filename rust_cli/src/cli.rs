use clap::{Command, Arg, ArgAction};

pub fn get_clap_app() -> Command {
    Command::new("program-metadata")
        .about("A Solana CLI application")
        .version("0.1.0")
        .subcommand(
            Command::new("idl")
                .about("IDL management commands")
                .subcommand(
                    Command::new("upload")
                        .about("Upload IDL from JSON file")
                        .arg(
                            Arg::new("idl-path")
                                .help("Path to the IDL JSON file")
                                .required(true)
                                .index(1)
                        )
                        .arg(
                            Arg::new("program-id")
                                .short('p')
                                .help("Program ID")
                                .required(true)
                                .index(2)
                        )
                        .arg(
                            Arg::new("keypair")
                                .help("Path to keypair file (optional, defaults to config)")
                                .short('k')
                                .long("keypair")
                                .action(ArgAction::Set)
                                .required(false)
                        )
                        .arg(
                            Arg::new("priority-fees-per-cu")
                                .help("Priority fees per compute unit")
                                .short('p')
                                .long("priority-fees")
                                .action(ArgAction::Set)
                                .default_value("0")
                        )
                )
                .subcommand(
                    Command::new("upload-url")
                        .about("Upload IDL from JSON URL")
                        .arg(
                            Arg::new("url")
                                .help("URL of the IDL JSON")
                                .required(true)
                                .index(1)
                        )
                        .arg(
                            Arg::new("program-id")
                                .short('p')
                                .help("Program ID")
                                .required(true)
                                .index(2)
                        )
                        .arg(
                            Arg::new("keypair")
                                .help("Path to keypair file (optional, defaults to config)")
                                .short('k')
                                .long("keypair")
                                .action(ArgAction::Set)
                                .required(false)
                        )
                        .arg(
                            Arg::new("priority-fees-per-cu")
                                .help("Priority fees per compute unit")
                                .short('p')
                                .long("priority-fees")
                                .action(ArgAction::Set)
                                .default_value("0")
                        )
                )
                .subcommand(
                    Command::new("download")
                        .about("Download IDL to file")
                        .arg(
                            Arg::new("program-id")
                                .help("Program ID")
                                .required(true)
                                .index(1)
                        )
                        .arg(
                            Arg::new("output")
                                .help("Output file path (optional, defaults to idl.json)")
                                .required(false)
                                .index(2)
                        )
                )
        )
        .subcommand(
            Command::new("metadata")
                .about("Metadata management commands")
                .subcommand(
                    Command::new("upload")
                        .about("Upload Metadata from JSON file")
                        .arg(
                            Arg::new("metadata-path")
                                .help("Path to the Metadata JSON file")
                                .required(true)
                                .index(1)
                        )
                        .arg(
                            Arg::new("program-id")
                                .short('p')
                                .help("Program ID")
                                .required(true)
                                .index(2)
                        )
                        .arg(
                            Arg::new("keypair")
                                .help("Path to keypair file (optional, defaults to config)")
                                .short('k')
                                .long("keypair")
                                .action(ArgAction::Set)
                                .required(false)
                        )
                        .arg(
                            Arg::new("priority-fees-per-cu")
                                .help("Priority fees per compute unit")
                                .short('p')
                                .long("priority-fees")
                                .action(ArgAction::Set)
                                .default_value("0")
                        )
                )
                .subcommand(
                    Command::new("upload-url")
                        .about("Upload Metadata from JSON URL")
                        .arg(
                            Arg::new("url")
                                .help("URL of the Metadata JSON")
                                .required(true)
                                .index(1)
                        )
                        .arg(
                            Arg::new("program-id")
                                .short('p')
                                .help("Program ID")
                                .required(true)
                                .index(2)
                        )
                        .arg(
                            Arg::new("keypair")
                                .help("Path to keypair file (optional, defaults to config)")
                                .short('k')
                                .long("keypair")
                                .action(ArgAction::Set)
                                .required(false)
                        )
                        .arg(
                            Arg::new("priority-fees-per-cu")
                                .help("Priority fees per compute unit")
                                .short('p')
                                .long("priority-fees")
                                .action(ArgAction::Set)
                                .default_value("0")
                        )
                )
                .subcommand(
                    Command::new("download")
                        .about("Download Metadata to file")
                        .arg(
                            Arg::new("program-id")
                                .help("Program ID")
                                .required(true)
                                .index(1)
                        )
                        .arg(
                            Arg::new("output")
                                .help("Output file path (optional, defaults to metadata.json)")
                                .required(false)
                                .index(2)
                        )
                )
        )
} 